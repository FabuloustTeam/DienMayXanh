<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-12-22T18:12:35 ICT" name="Suite" finished-at="2020-12-22T18:15:27 ICT" duration-ms="171950">
    <groups>
      <group name="chooseRecivePlaceSuccess">
        <method signature="ChooseReceivedPlace.testSuccessWithOnlyProvince()[pri:2, instance:TestCases.ChooseReceivedPlace@48793bef]" name="testSuccessWithOnlyProvince" class="TestCases.ChooseReceivedPlace"/>
      </group> <!-- chooseRecivePlaceSuccess -->
      <group name="successUpdateReceivePlace">
        <method signature="ChooseReceivedPlace.testSuccessUpdateByClickOnButonChange()[pri:6, instance:TestCases.ChooseReceivedPlace@48793bef]" name="testSuccessUpdateByClickOnButonChange" class="TestCases.ChooseReceivedPlace"/>
        <method signature="ChooseReceivedPlace.testSuccessUpdateByClickOnDropBoxProvince()[pri:7, instance:TestCases.ChooseReceivedPlace@48793bef]" name="testSuccessUpdateByClickOnDropBoxProvince" class="TestCases.ChooseReceivedPlace"/>
        <method signature="ChooseReceivedPlace.testSuccessUpdateWithOnlyProvinceSubmitBefor()[pri:5, instance:TestCases.ChooseReceivedPlace@48793bef]" name="testSuccessUpdateWithOnlyProvinceSubmitBefor" class="TestCases.ChooseReceivedPlace"/>
      </group> <!-- successUpdateReceivePlace -->
      <group name="chooseReceivePlaceSuccess">
        <method signature="ChooseReceivedPlace.testMainSFWithFullInfor()[pri:1, instance:TestCases.ChooseReceivedPlace@48793bef]" name="testMainSFWithFullInfor" class="TestCases.ChooseReceivedPlace"/>
        <method signature="ChooseReceivedPlace.testSuccessWithoutFillTextboxAddress()[pri:3, instance:TestCases.ChooseReceivedPlace@48793bef]" name="testSuccessWithoutFillTextboxAddress" class="TestCases.ChooseReceivedPlace"/>
      </group> <!-- chooseReceivePlaceSuccess -->
      <group name="chooseReceivePlaceFail">
        <method signature="ChooseReceivedPlace.testFailWithoutChooseWard()[pri:4, instance:TestCases.ChooseReceivedPlace@48793bef]" name="testFailWithoutChooseWard" class="TestCases.ChooseReceivedPlace"/>
      </group> <!-- chooseReceivePlaceFail -->
    </groups>
    <test started-at="2020-12-22T18:12:35 ICT" name="choosereceived" finished-at="2020-12-22T18:15:27 ICT" duration-ms="171950">
      <class name="TestCases.ChooseReceivedPlace">
        <test-method is-config="true" signature="defineSheetExcel(java.lang.String)[pri:0, instance:TestCases.ChooseReceivedPlace@48793bef]" started-at="2020-12-22T18:12:35 ICT" name="defineSheetExcel" finished-at="2020-12-22T18:12:36 ICT" duration-ms="701" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ChooseReceivedPlace]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defineSheetExcel -->
        <test-method is-config="true" signature="accessWebsite(java.lang.String)[pri:0, instance:TestCases.ChooseReceivedPlace@48793bef]" started-at="2020-12-22T18:12:36 ICT" name="accessWebsite" finished-at="2020-12-22T18:12:47 ICT" duration-ms="10905" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.dienmayxanh.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accessWebsite -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:TestCases.ChooseReceivedPlace@48793bef]" started-at="2020-12-22T18:12:47 ICT" name="beforeMethod" finished-at="2020-12-22T18:12:47 ICT" duration-ms="141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testMainSFWithFullInfor()[pri:1, instance:TestCases.ChooseReceivedPlace@48793bef]" started-at="2020-12-22T18:12:47 ICT" name="testMainSFWithFullInfor" finished-at="2020-12-22T18:12:53 ICT" duration-ms="6122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMainSFWithFullInfor -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:TestCases.ChooseReceivedPlace@48793bef]" started-at="2020-12-22T18:12:53 ICT" name="closeBrowser" finished-at="2020-12-22T18:12:54 ICT" duration-ms="457" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="accessWebsite(java.lang.String)[pri:0, instance:TestCases.ChooseReceivedPlace@48793bef]" started-at="2020-12-22T18:12:54 ICT" name="accessWebsite" finished-at="2020-12-22T18:13:06 ICT" duration-ms="12286" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.dienmayxanh.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accessWebsite -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:TestCases.ChooseReceivedPlace@48793bef]" started-at="2020-12-22T18:13:06 ICT" name="beforeMethod" finished-at="2020-12-22T18:13:06 ICT" duration-ms="152" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testSuccessWithOnlyProvince()[pri:2, instance:TestCases.ChooseReceivedPlace@48793bef]" started-at="2020-12-22T18:13:06 ICT" name="testSuccessWithOnlyProvince" finished-at="2020-12-22T18:13:12 ICT" duration-ms="5881" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccessWithOnlyProvince -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:TestCases.ChooseReceivedPlace@48793bef]" started-at="2020-12-22T18:13:12 ICT" name="closeBrowser" finished-at="2020-12-22T18:13:12 ICT" duration-ms="225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="accessWebsite(java.lang.String)[pri:0, instance:TestCases.ChooseReceivedPlace@48793bef]" started-at="2020-12-22T18:13:12 ICT" name="accessWebsite" finished-at="2020-12-22T18:13:27 ICT" duration-ms="14410" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.dienmayxanh.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accessWebsite -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:TestCases.ChooseReceivedPlace@48793bef]" started-at="2020-12-22T18:13:27 ICT" name="beforeMethod" finished-at="2020-12-22T18:13:27 ICT" duration-ms="133" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testSuccessWithoutFillTextboxAddress()[pri:3, instance:TestCases.ChooseReceivedPlace@48793bef]" started-at="2020-12-22T18:13:27 ICT" name="testSuccessWithoutFillTextboxAddress" finished-at="2020-12-22T18:13:33 ICT" duration-ms="6619" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccessWithoutFillTextboxAddress -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:TestCases.ChooseReceivedPlace@48793bef]" started-at="2020-12-22T18:13:33 ICT" name="closeBrowser" finished-at="2020-12-22T18:13:34 ICT" duration-ms="138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="accessWebsite(java.lang.String)[pri:0, instance:TestCases.ChooseReceivedPlace@48793bef]" started-at="2020-12-22T18:13:34 ICT" name="accessWebsite" finished-at="2020-12-22T18:13:46 ICT" duration-ms="12477" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.dienmayxanh.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accessWebsite -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:TestCases.ChooseReceivedPlace@48793bef]" started-at="2020-12-22T18:13:46 ICT" name="beforeMethod" finished-at="2020-12-22T18:13:46 ICT" duration-ms="159" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testFailWithoutChooseWard()[pri:4, instance:TestCases.ChooseReceivedPlace@48793bef]" started-at="2020-12-22T18:13:46 ICT" name="testFailWithoutChooseWard" finished-at="2020-12-22T18:14:12 ICT" duration-ms="25636" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of element located by By.className: errWard (tried for 20 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.className: errWard (tried for 20 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at TestCases.ChooseReceivedPlace.waitForElementVisible(ChooseReceivedPlace.java:412)
at TestCases.ChooseReceivedPlace.getActualErrorWard(ChooseReceivedPlace.java:401)
at TestCases.ChooseReceivedPlace.testFailWithoutChooseWard(ChooseReceivedPlace.java:155)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":".errWard"}
  (Session info: chrome=87.0.4280.88)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'DAWN', ip: '10.9.80.112', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 87.0.4280.88, chrome: {chromedriverVersion: 87.0.4280.20 (c99e81631faa0..., userDataDir: C:\Users\MODERN~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:52681}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 98161303b1efd2023a803c1da8ab90c5
*** Element info: {Using=class name, value=errWard}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByClassName(RemoteWebDriver.java:412)
at org.openqa.selenium.By$ByClassName.findElement(By.java:389)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:205)
at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:201)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
... 31 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFailWithoutChooseWard -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:TestCases.ChooseReceivedPlace@48793bef]" started-at="2020-12-22T18:14:13 ICT" name="closeBrowser" finished-at="2020-12-22T18:14:13 ICT" duration-ms="262" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="accessWebsite(java.lang.String)[pri:0, instance:TestCases.ChooseReceivedPlace@48793bef]" started-at="2020-12-22T18:14:13 ICT" name="accessWebsite" finished-at="2020-12-22T18:14:27 ICT" duration-ms="14305" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.dienmayxanh.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accessWebsite -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:TestCases.ChooseReceivedPlace@48793bef]" started-at="2020-12-22T18:14:27 ICT" name="beforeMethod" finished-at="2020-12-22T18:14:28 ICT" duration-ms="106" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testSuccessUpdateWithOnlyProvinceSubmitBefor()[pri:5, instance:TestCases.ChooseReceivedPlace@48793bef]" started-at="2020-12-22T18:14:28 ICT" name="testSuccessUpdateWithOnlyProvinceSubmitBefor" finished-at="2020-12-22T18:14:37 ICT" duration-ms="9700" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccessUpdateWithOnlyProvinceSubmitBefor -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:TestCases.ChooseReceivedPlace@48793bef]" started-at="2020-12-22T18:14:37 ICT" name="closeBrowser" finished-at="2020-12-22T18:14:37 ICT" duration-ms="142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="accessWebsite(java.lang.String)[pri:0, instance:TestCases.ChooseReceivedPlace@48793bef]" started-at="2020-12-22T18:14:37 ICT" name="accessWebsite" finished-at="2020-12-22T18:14:53 ICT" duration-ms="15827" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.dienmayxanh.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accessWebsite -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:TestCases.ChooseReceivedPlace@48793bef]" started-at="2020-12-22T18:14:53 ICT" name="beforeMethod" finished-at="2020-12-22T18:14:53 ICT" duration-ms="145" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testSuccessUpdateByClickOnButonChange()[pri:6, instance:TestCases.ChooseReceivedPlace@48793bef]" started-at="2020-12-22T18:14:53 ICT" name="testSuccessUpdateByClickOnButonChange" finished-at="2020-12-22T18:15:03 ICT" duration-ms="9778" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccessUpdateByClickOnButonChange -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:TestCases.ChooseReceivedPlace@48793bef]" started-at="2020-12-22T18:15:03 ICT" name="closeBrowser" finished-at="2020-12-22T18:15:03 ICT" duration-ms="104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="accessWebsite(java.lang.String)[pri:0, instance:TestCases.ChooseReceivedPlace@48793bef]" started-at="2020-12-22T18:15:03 ICT" name="accessWebsite" finished-at="2020-12-22T18:15:18 ICT" duration-ms="14426" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.dienmayxanh.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accessWebsite -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:TestCases.ChooseReceivedPlace@48793bef]" started-at="2020-12-22T18:15:18 ICT" name="beforeMethod" finished-at="2020-12-22T18:15:18 ICT" duration-ms="140" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testSuccessUpdateByClickOnDropBoxProvince()[pri:7, instance:TestCases.ChooseReceivedPlace@48793bef]" started-at="2020-12-22T18:15:18 ICT" name="testSuccessUpdateByClickOnDropBoxProvince" finished-at="2020-12-22T18:15:27 ICT" duration-ms="9353" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccessUpdateByClickOnDropBoxProvince -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:TestCases.ChooseReceivedPlace@48793bef]" started-at="2020-12-22T18:15:27 ICT" name="closeBrowser" finished-at="2020-12-22T18:15:27 ICT" duration-ms="84" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="saveAndCloseExcel()[pri:0, instance:TestCases.ChooseReceivedPlace@48793bef]" started-at="2020-12-22T18:15:27 ICT" name="saveAndCloseExcel" finished-at="2020-12-22T18:15:27 ICT" duration-ms="59" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- saveAndCloseExcel -->
      </class> <!-- TestCases.ChooseReceivedPlace -->
    </test> <!-- choosereceived -->
  </suite> <!-- Suite -->
</testng-results>
